.Language=English,English
.PluginContents=FarColorer

@contents
$# FarColorer

    ~Settings menu.~@settingsmenu@
    ~Plugin setup.~@config@
    ~Logging settings.~@configlog@
    ~Command line support.~@cmdline@
    ~Plugin's menus.~@menu@

    ~Colorer base`s settings~@customize@
    ~Schemes settings.~@confighrc@

    ~Using a plugin in macros:~@MacroCallPlugin@
      ~Macro functions.~@MacroCall@
      ~Plugin Guids.~@PluginGuids

    ~About authors.~@author@

@settingsmenu
$# Settings

  #Main settings#
    Open dialog for main settings.

  #Schemes settings#
    Open dialog for shemes settings. The dialog does not work if the plugin is disabled.

  #Logging settings#
    Open dialog for log settings.

  #Test schema library#
    Tests ability to load all the language of schemes, taking the path to catalog.xml from the settings window.

@config
$# FarColorer's settings

  #Enabled#
     Enable/Disable FarColorer.

  The following four parameters are used to configure the basic library of schemes and styles
  used in the plug-in. For more information, see ~Configuring the Schema and Style database~@customize@

  #catalog.xml file#
     Full file path sets default catalog file for FarColorer. If this field is empty FarColorer trying to find the file automatically in a subfolder of "base" parent directory plugin.

  #Custom schemas folder (hrc)#
     The full path to the folder with custom schema files

  #Custom color styles folder (hrd)#
     The full path to the file or folder with custom color style files

  #Custom schemas settings file (hrcsettings)#
     The full path to the file with custom schema settings

  #Color style#
     Choose a color style, which will be used for coloring text. The choice does not work if the plugin is disabled.

  #TrueMod Enabled#
     Enable/Disable TrueMod in plugin.

  #TrueMod color style#
     Choose a color style, which will be used for coloring text in TrueMod. The choice does not work if the plugin is disabled.

  #Pairs#
     Allocate or not paired language elements (brackets, quotes).

  #Syntax#
     Turns on display of syntax

  #Classic outline style#
     In classic style displays only the name of the function. Otherwise show the beginning of the line number, then the first letter in the function and the function name itself.

  #Change background editor#
     In the set condition, FarColorer set in System Preferences color of "Plain Text" color group "editor" such as and the default color for the color scheme FarColorer. The effect is visible on the files, the number of rows in less than window height editor.

  #Cross#
     [ ] Do not show ever
     [?] Show if included in the scheme.
     [x] Always Show.

  #Cross style#
     Cross style shown when "[x] Cross".

  #Period for build#
     The frequency, in milliseconds, at which Far call "background" parsing of the file in Colorer. The lower value - the faster large file is drawn, but the responsiveness of the screen drops.

  #{ Ok }#
     Closes dialog and save settings.

@customize
$^#Colorer base`s settings#
    FarColorer comes with a basic library of HRC schemas and HRD styles, the root file of which is catalog.xml .
    To change the set and behavior of HRC schemes and HRD styles, the file path parameters are used in the plugin settings dialog.,
    as well as the ~Schema Settings~@confighrc dialog.

    The necessary steps to change the base library are shown on the page ~https://colorer.github.io/advanced/custom/~ .

    When working with the settings library of schemes and styles, the following loading order is applied:
    1. Read the value of the "catalog.xml file"
        - if filled in, then use the specified file as catalog.xml
        - otherwise we will use catalog.xml supplied with the plugin
    2. Read the hrcsettings.xml included in the plug-in delivery
    3. Read the value of the "Custom schemas folder (hrc)"
        - if this file is filled in, then we process the file as a set of hrd-sets (an outdated method, for backward compatibility)
        - if this folder is filled in, then we load everything from it *.hrd files
    4. Read the value of the "Custom color styles folder (hrd)"
        - if this file is filled in, then we process it in the same way as proto.hrc (outdated method, for backward compatibility)
        - if this folder is filled in, then we load everything from it *.hrc files
    5. Read the value of the "Custom schemas settings file (hrcsettings)" (custom hrcsettings.xml)
        - if it is filled in, then load it.
        - if it is not filled in, check the environment variable COLORER_HRC_SETTINGS with the path to the file.
    6. Read the scheme settings from the plugin settings in FarManager

@confighrc
$# Schemes settings
    For each of the selected schemes, a list of parameters that affect the mapping coloring. Parameter value - the value set for this parameter. Values of the form <default-znach.> shows that the parameter is "znach." It is set in the system (non-user) settings of the scheme or scheme is taken from default. Save all the changes occurs after clicking "OK" button.

@configlog
$# Logging settings

  #Enable logging#
    Enable/Disable logging.

  #Logging level#
    Log level from list.

  #Log path#
    Path to folder where log files will be stored.

@cmdline
$# Command line support
    You can use the plugin from FAR's command line with prefix 'clr:' to view files with syntax highlighting in FarColorer's internal viewer. To view file you have to specify file name after the 'clr:' prefix in FAR's command line.
    This function is equal to #colorer.exe# program features, but doesn't load HRC database each time, so it works faster.

@add
$# Outliner
    Here you can see a list of all functions or syntax errors found. Choose any item to go to corresponding line in text.

    You can use keyboard filter to quickly search for required items:

    #Ctrl-Left/Right#
      Expand-Collapse level of Outliner.

    #Ctrl-Up/Down#
      Move to next/previous item both in outliner and in source code.

    #Ctrl-Enter#
      Close the outliner and insert current item into the cursor position.

    #Enter#
      Close the outliner and jump to the selected item.

    #Tab#
      Complementing filter symbols, written after '?' in the field of display filter.

    #Symbol keys [0-9a-z;:-_]#
      Filter out the outliner items against entered filter.

@menu
$# FarColorer operation

  #1 List types#
    Lists all supported file types. You can choose any of them to use with current editor.

  #2 Match pair#
    Searches paired bracket (or any other pair structure) of the current region under cursor and jumps there.

  #3 Select block#
    Moves cursor to start of block and selects it all. You can call this function as on block limits as inside it. In second case FarColorer will find start and end of nearest block automatically.

  #4 Select pair#
    Selects pair block - but don't selects pair structures at start and end.

  #5 Outliner List#
    Shows all outlined regions in current file. There you can choose and jump into any of them, also you can use there any alphabetic symbols to create filters.

  #6 Errors List#
    As previous - but shows all errors in the text.

  #*# All these features are depend on the content of language scheme. All information is taken from syntax regions analysis.

  #7 Select region#
    Selects region under cursor.

  #Region info#
    Displays the name of the region and the scheme under the cursor.

  #8 Find function#
    Searches function name under cursor in outliner view, and jumps there.

  #9 Update highlight#
    Updates syntax highlighting in current editor. Use it, ifsome problems occurs in current syntax.

  #R Reload schema library#
    Reload the configuration plugin and library schemes.

  #C Configuration#
    Calls FarColorer ~configuration menu~@settingsmenu@.

@PluginGuids
$# Plugin Guids
   Plugin Guid - {D2F36B62-A470-418d-83A3-ED7A3710E5B5}

   #Dialog#
    Main settings - {87C92249-430D-4334-AC33-05E7423286E9}
    Scheme settings - {0497F43A-A8B9-4af1-A3A4-FA568F455707}
    Logging settings - {3D1031EA-B67A-451C-9FC6-081320D3A139}
    Define hot key - {C6BE56D8-A80A-4f7d-A331-A711435F2665}

   #Menu#
    Main menu in editor - {45453CAC-499D-4b37-82B8-0A77F7BD087C}
    Settings - {63E396BA-8E7F-4E38-A7A8-CBB7E9AC1E6D}
    Syntax choose - {46921647-DB52-44CA-8D8B-F34EA8B02E5D}
    Color styles - {18A6F7DF-375D-4d3d-8137-DC50AC52B71E}
    Outliner/error list - {A8A298BA-AD5A-4094-8E24-F65BF38E6C1F}

   #Message#
    Error - {0C954AC8-2B69-4c74-94C8-7AB10324A005}
    Reload base - {DEE3B49D-4A55-48a8-9DC8-D11DA04CBF37}
    Nothing found - {AB214DCE-450B-4389-9E3B-533C7A6D786C}
    Region name - {70656884-B7BD-4440-A8FF-6CE781C7DC6A}

@MacroCallPlugin
$# Using a plugin in macros
    The plugin can be called from a macro using the macro function Plugin.Call(GUID,[param]).
    Call format:

       #Plugin.Call("D2F36B62-A470-418d-83A3-ED7A3710E5B5",<Params>)#

    Here:
       #D2F36B62-A470-418d-83A3-ED7A3710E5B5#
          ~Guid of the plugin~@PluginGuids@

       #<Params>#
          different parameters

     ~Macro functions.~@MacroCall@

@MacroCall
$# Macro Functions

 #Работа с макросами.#
   Формат вызова функций #Plugin.Call("D2F36B62-A470-418d-83A3-ED7A3710E5B5",<FUNCTION>... )#, либо #Plugin.SyncCall#.
   Вызов всех функций регистро-независимый.
   Возвращаемое значение, если не указано отдельно, "true" - успешно, "false" - ошибка.

 #Работа с глобальными настройками#
   Ограничений на макрорегионы не установлено.

   #...,"Settings",<Name>, <Param>)#

     <Name> - принимает следующие значения:

        "Menu" - Открывает меню настроек. Значение по умолчанию если <Name> пустой.
        "Main" - Открывает окно главных настроек
        "Log" - Открывает окно настроек логирования
        "Hrc" - Открывает окно настроек параметров схем
        "Reload" - Перезагружает все настройки плагина и открытых редакторов. Включая библиотеку схему.
        "Status" - статус активности плагина.
          <Param> - number:
             0 - disable;
             1 - enable;
             Либо boolean: "false" -disable, "true" - enable.
          Если задан то применяется новый статус с перезагрузкой всех настроек. Возвращает предыдущее значение. Если не задан возвращает текущее значение.
        "SaveSettings" - Сохраняет настройки плагина.

 #Работа с меню#
   Работает только в MACROAREA_EDITOR.

   #...,"Menu")#
     Открывает меню плагина в редакторе.

 #Работа с типами файлов#
   Работает только в MACROAREA_EDITOR.

   #...,"Types",<Action>, <Param>)#

     <Action> - принимает следующие значения:

        "Menu" - Открывает меню выбора типа файлов.
        "List" - Возвращает массив названий всех доступных типов файлов.
        "Get" - Возвращает текущий тип (первый параметр) и группу файла (второй параметр).
        "Set" - Устанавливает для файла открытого в редакторе указанный тип.
          <Param> - строка, тип файла

 #Работа с параметрами типов файлов#
   Ограничений на макрорегионы не установлено. Все изменения применяются только для текущего сеанса плагина. Для сохранения изменений необходимо вызывать "SaveSettings", для сброса "Reload".

   #...,"ParamsOfType",<Action>, <Param1>,...)#

        "List" - Список параметров типа
           <Param1> - название типа. Строка. Регистро-зависимо.
          Возвращает
           <OutParam1> - массив названий параметров.
           <OutParam2> - массив значений этих параметров. В случае отсутствия значения у параметра возвращается "nil".
        "Get" - Возвращает значение параметра. Тип - всегда строка.
           <Param1> - название типа. Строка. Регистро-зависимо.
           <Param2> - название параметра. Строка. Регистро-зависимо. В случае отсутствия значения возвращается "nil".
        "Set" - Устанавливает значение для параметра или удаляет его.
           <Param1> - название типа. Строка. Регистро-зависимо.
           <Param2> - название параметра. Строка. Регистро-зависимо.
           <Param3> - значение параметра. Строка. Если не передан то удаляется пользовательское значение параметра. Если передана пустая строка то это значение присваивается параметру.

 #Работа с скобками#
   Работает только в MACROAREA_EDITOR.

   #...,"Brackets",<Action>)#

     <Action> - принимает следующие значения:

        "Match" - Найти парную скобку.
        "SelectAll" - Выделить блок со скобками.
        "SelectIn" - Выделить блок между скобок.

 #Работа с регионами#
   Работает только в MACROAREA_EDITOR.

   #...,"Region",<Action>)#

     <Action> - принимает следующие значения:

        "Select" - Выбрать текущий регион.
        "Show" - Показать окно с данными региона.
        "List" - Возвращает описание региона. Первый параметр регион, второй схема.

 #Работа с функциями#
   Работает только в MACROAREA_EDITOR.

   #...,"Functions",<Action>)#

     <Action> - принимает следующие значения:

        "Show" - Показать окно со списком функций.
        "Find" - Найти функцию, на которой стоит курсор.
        "List" - Возвращает массив всех найденных функций и массив номеров строк в которых они объявлены.

 #Работа с ошибками#
   Работает только в MACROAREA_EDITOR.

   #...,"Errors",<Action>)#

     <Action> - принимает следующие значения:

        "Show" - Показать окно со списком ошибок
        "List" - Возвращает массив всех найденных ошибок и массив номеров строк в которых они найдены.

 #Работа с параметрами текущего редактора#
   При закрытии редактора данные параметры не сохраняются.
   Работает только в MACROAREA_EDITOR.

   #...,"Editor",<Action>,<Param1>,...)#

     <Action> - принимает следующие значения:

        "Refresh" - обновляет раскраску.
        "Status" - Статус активности плагина для текущего редактора:
           <Param1> - number:
              0 - disable;
              1 - enable;
          Если задан то изменяется текущее и возвращает предыдущее значение.
          Если не задан, возвращает текущее значение для данного редактора
        "CrossVisible" - Видимость и тип креста в редакторе:
          Возвращает текущий стиль креста и правила отображения для данного редактора.
          <OutParam1> - number:
             0 - disable;
             1 - enable;
             2 - согласно параметрам схемы.
          <OutParam2> - number:
             0 - not displayed;
             1 - vertical;
             2 - horizontal;
             3 - полный крест.
          Если указаны дополнительные параметры то изменяет стиль и правила отображения.
          <Param1> - number:
             0 - disable;
             1 - enable;
             2 - согласно параметрам схемы
          <Param2> - необязательный, number:
             1 - vertical;
             2 - horizontal;
             3 - полный крест.
        "Pair" - Статус отображения парных элементов:
          <Param1> - number:
             0 - disable;
             1 - enable;
          Если задан то изменяется текущее и возвращает предыдущее значение.
          Если не задан, возвращает текущее значение для данного редактора.
        "Syntax" - статус отображения синтаксиса:
          <Param1> - number:
             0 - disable;
             1 - enable;
          Если задан то изменяется текущее и возвращает предыдущее значение.
          Если не задан, то возвращает текущее значение для данного редактора.
        "Progress" - возвращает процент парсинга текущего файла в редакторе. Целочисленное значение.

@hrd
$# Color style selection
    List of all available color schemes. You can choose what you need.

@exception
$# Exception occured
    Exception happened while FarColorer work. All further processing would be disabled. You can re-enable FarColorer from it's settings menu after locating and removing exception cause. All extended information in FarColorer logging file (colorer.log by default)

@filetypechoose
$# List types
    The list contains all of the supported file types. By choosing any, you force the type of coloring the current file.

    #Automatic detection# - select the type of file produced plugin built rules.
    #Favorites# - The list of chosen types. Add to "Favorites" is produced by pressing the Ins, delete - Delete.
    #Hot keys# - to assign a hot key to the file type you need to press F4, and in the dialog box to specify the key.

    Hot keys and being in the group "Favorites" can also be customized through the ~Schemes settings.~@confighrc@ These are the parameters 'hotkey' and 'favorite' for any of the schemes.

@keyassign
$# Define key
    Keys 0-9, A-Z

@author
$# FarColorer is a syntax highlighting plugin for FAR Manager.
    #Plugin home site#
           https://github.com/colorer/FarColorer
    #Colorer library site#
           https://colorer.sf.net
           https://colorer.github.io

    #Igor Ruskih# (Cail Lomecb) Copyright (c) 1999-2009
           email  : irusskih at gmail dot com

    #Eugene Efremov#
           email  : 4mirror at mail dot ru

    #ctapmex# (Aleksey Dobrunov) Copyright (c) 2009-2025
           email  : ctapmex at ctapmex dot com
